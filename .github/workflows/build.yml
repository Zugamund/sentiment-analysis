# .github/workflows/build.yml
name: Java CI (Maven)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  create-folder:
    name: create-folder
    runs-on: ubuntu-latest
    steps:
      - name: Prepare remote folder (clean leftovers)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port:     ${{ secrets.PORT }}
          key:      ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e
            mkdir -p /opt/myapp
            # Si un run précédent a créé un DOSSIER "app.jar", on le supprime
            if [ -d /opt/myapp/app.jar ]; then
              rm -rf /opt/myapp/app.jar
            fi

  build-and-deploy:
    name: build-and-deploy
    runs-on: ubuntu-latest
    needs: create-folder

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build with Maven (skip tests for now)
        run: mvn -B -DskipTests clean package

      - name: Rename jar to app.jar
        run: |
          set -e
          JAR=$(ls target/*.jar | head -n1)
          cp "$JAR" app.jar
          ls -lh app.jar

      - name: Copy JAR to VPS via SCP (overwrite)
        uses: appleboy/scp-action@v1.0.0
        with:
          host:       ${{ secrets.HOST }}
          username:   ${{ secrets.USERNAME }}
          port:       ${{ secrets.PORT }}
          key:        ${{ secrets.PRIVATE_KEY }}
          source:     "app.jar"        # ← fichier local
          target:     "/opt/myapp"     # ← dossier distant (PAS /opt/myapp/app.jar)
          overwrite:  true             # ← écraser si le fichier existe
          rm:         false            # (on a déjà nettoyé au besoin)

      - name: Verify file on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port:     ${{ secrets.PORT }}
          key:      ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e
            echo "== ls =="
            ls -l /opt/myapp/
            echo "== file =="
            file /opt/myapp/app.jar
            echo "== jar tf =="
            if command -v jar >/dev/null 2>&1; then
              jar tf /opt/myapp/app.jar | head -n 20
            else
              echo "La commande 'jar' n'est pas disponible sur le VPS."
            fi
