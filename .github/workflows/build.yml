# .github/workflows/build.yml
name: Java CI (Maven)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  create-folder:
    name: create-folder
    runs-on: ubuntu-latest
    steps:
      - name: Create folder on remote VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port:     ${{ secrets.PORT }}
          key:      ${{ secrets.PRIVATE_KEY }}
          script: |
            whoami
            sudo mkdir -p /opt/myapp
            sudo chown -R $USER:$USER /opt/myapp

  build-and-deploy:
    name: build-and-deploy
    runs-on: ubuntu-latest
    needs: create-folder               # attendre la création du dossier sur le VPS
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build with Maven (skip tests for now)
        run: mvn -B -DskipTests clean package

      - name: Rename jar to app.jar (pratique pour la suite)
        run: |
          JAR="$(ls -1 target/*.jar | head -n1)"
          cp "$JAR" target/app.jar
          ls -lh target/

      # Déploiement : copie depuis le runner vers /opt/myapp/app.jar (sans garder le dossier target/)
      - name: Copy JAR to VPS via SCP
        uses: appleboy/scp-action@v1.0.0
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port:     ${{ secrets.PORT }}
          key:      ${{ secrets.PRIVATE_KEY }}   # clé privée, pas de password
          source:   "target/app.jar"             # chemin côté runner GitHub
          target:   "/opt/myapp/"                # dossier de destination sur le VPS
          strip_components: 1                    # retire "target/" => dépose /opt/myapp/app.jar

      - name: Verify file on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port:     ${{ secrets.PORT }}
          key:      ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e
            ls -lh /opt/myapp/app.jar
            file /opt/myapp/app.jar || true
